{
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"IOverviewReport": {
				"properties": {
					"sales": {
						"type": "number",
						"format": "double"
					},
					"orders": {
						"type": "number",
						"format": "double"
					},
					"registers": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"sales",
					"orders",
					"registers"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ISalesReport": {
				"properties": {
					"time": {
						"type": "string"
					},
					"sales": {
						"type": "number",
						"format": "double"
					},
					"orders": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"time",
					"sales",
					"orders"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IOrderReport": {
				"properties": {
					"completedOrders": {
						"type": "number",
						"format": "double"
					},
					"canceledOrders": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"completedOrders",
					"canceledOrders"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IProductReport": {
				"properties": {
					"id": {
						"type": "number",
						"format": "double"
					},
					"name": {
						"type": "string"
					},
					"brand": {
						"type": "string"
					},
					"quantity": {
						"type": "number",
						"format": "double"
					},
					"sales": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"id",
					"name",
					"brand",
					"quantity",
					"sales"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IProductReports": {
				"properties": {
					"total": {
						"type": "string"
					},
					"products": {
						"items": {
							"$ref": "#/components/schemas/IProductReport"
						},
						"type": "array"
					}
				},
				"required": [
					"total",
					"products"
				],
				"type": "object",
				"additionalProperties": false
			},
			"BlogCategory": {
				"properties": {
					"id": {
						"type": "number",
						"format": "double"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					},
					"name": {
						"type": "string"
					}
				},
				"required": [
					"id",
					"createdAt",
					"name"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Blog": {
				"properties": {
					"id": {
						"type": "number",
						"format": "double"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					},
					"title": {
						"type": "string"
					},
					"categoryId": {
						"type": "number",
						"format": "double"
					},
					"imgPath": {
						"type": "string"
					},
					"content": {
						"type": "string"
					},
					"commentAllow": {
						"type": "boolean"
					},
					"category": {
						"$ref": "#/components/schemas/BlogCategory"
					}
				},
				"required": [
					"id",
					"createdAt",
					"title",
					"categoryId",
					"content",
					"category",
					"imgPath",
					"commentAllow"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IBlogs": {
				"properties": {
					"blogs": {
						"items": {
							"$ref": "#/components/schemas/Blog"
						},
						"type": "array"
					},
					"total": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"blogs",
					"total"
				],
				"type": "object",
				"additionalProperties": false
			},
			"BlogField": {
				"enum": [
					"title",
					"createdAt"
				],
				"type": "string"
			},
			"Change": {
				"enum": [
					"DESC",
					"ASC"
				],
				"type": "string"
			},
			"IBlogCategory": {
				"properties": {
					"name": {
						"type": "string"
					},
					"id": {
						"type": "number",
						"format": "double"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					}
				},
				"required": [
					"name",
					"id",
					"createdAt"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IBlog": {
				"properties": {
					"title": {
						"type": "string"
					},
					"categoryId": {
						"type": "number",
						"format": "double"
					},
					"imgPath": {
						"type": "string"
					},
					"content": {
						"type": "string"
					},
					"commentAllow": {
						"type": "boolean"
					},
					"id": {
						"type": "number",
						"format": "double"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					},
					"category": {
						"$ref": "#/components/schemas/IBlogCategory"
					}
				},
				"required": [
					"title",
					"categoryId",
					"content",
					"id",
					"createdAt"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IBlogCreateProps": {
				"properties": {
					"title": {
						"type": "string"
					},
					"categoryId": {
						"type": "number",
						"format": "double"
					},
					"imgPath": {
						"type": "string"
					},
					"content": {
						"type": "string"
					},
					"commentAllow": {
						"type": "boolean"
					}
				},
				"required": [
					"title",
					"categoryId",
					"content"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IBlogUpdateProps": {
				"properties": {
					"title": {
						"type": "string"
					},
					"categoryId": {
						"type": "number",
						"format": "double"
					},
					"imgPath": {
						"type": "string"
					},
					"content": {
						"type": "string"
					},
					"commentAllow": {
						"type": "boolean"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"IBlogCommentCreateProps": {
				"properties": {
					"text": {
						"type": "string"
					},
					"blogId": {
						"type": "number",
						"format": "double"
					},
					"parentCommentId": {
						"type": "number",
						"format": "double"
					},
					"userId": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"text",
					"blogId",
					"userId"
				],
				"type": "object",
				"additionalProperties": false
			},
			"UserRole": {
				"enum": [
					"all",
					"admin",
					"editor",
					"customer"
				],
				"type": "string"
			},
			"ProductCategory": {
				"properties": {
					"id": {
						"type": "number",
						"format": "double"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					},
					"name": {
						"type": "string"
					},
					"imgPath": {
						"type": "string"
					}
				},
				"required": [
					"id",
					"createdAt",
					"name",
					"imgPath"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Brand": {
				"properties": {
					"id": {
						"type": "number",
						"format": "double"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					},
					"name": {
						"type": "string"
					},
					"imgPath": {
						"type": "string"
					}
				},
				"required": [
					"id",
					"createdAt",
					"name",
					"imgPath"
				],
				"type": "object",
				"additionalProperties": false
			},
			"User": {
				"properties": {
					"id": {
						"type": "number",
						"format": "double"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					},
					"fname": {
						"type": "string"
					},
					"lname": {
						"type": "string"
					},
					"email": {
						"type": "string"
					},
					"password": {
						"type": "string"
					},
					"role": {
						"$ref": "#/components/schemas/UserRole"
					},
					"phone": {
						"type": "string"
					},
					"address": {
						"type": "string"
					},
					"token": {
						"type": "string"
					},
					"wishList": {
						"items": {
							"$ref": "#/components/schemas/Product"
						},
						"type": "array"
					},
					"orders": {
						"items": {
							"$ref": "#/components/schemas/Order"
						},
						"type": "array"
					}
				},
				"required": [
					"id",
					"createdAt",
					"fname",
					"lname",
					"email",
					"password",
					"token",
					"phone",
					"address",
					"role",
					"wishList",
					"orders"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Product": {
				"properties": {
					"id": {
						"type": "number",
						"format": "double"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					},
					"sku": {
						"type": "string"
					},
					"categoryId": {
						"type": "number",
						"format": "double"
					},
					"brandId": {
						"type": "number",
						"format": "double"
					},
					"imgPaths": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"name": {
						"type": "string"
					},
					"summary": {
						"type": "string"
					},
					"description": {
						"type": "string"
					},
					"price": {
						"type": "number",
						"format": "double"
					},
					"category": {
						"$ref": "#/components/schemas/ProductCategory"
					},
					"brand": {
						"$ref": "#/components/schemas/Brand"
					},
					"overallReview": {
						"type": "number",
						"format": "double"
					},
					"reviewCount": {
						"type": "number",
						"format": "double"
					},
					"comments": {
						"items": {
							"$ref": "#/components/schemas/ProductComment"
						},
						"type": "array"
					},
					"variants": {
						"items": {
							"$ref": "#/components/schemas/ProductVariant"
						},
						"type": "array"
					},
					"reviews": {
						"items": {
							"$ref": "#/components/schemas/ProductReview"
						},
						"type": "array"
					}
				},
				"required": [
					"id",
					"createdAt",
					"categoryId",
					"brandId",
					"name",
					"price",
					"sku",
					"category",
					"brand",
					"summary",
					"description",
					"overallReview",
					"reviewCount",
					"imgPaths",
					"comments",
					"variants",
					"reviews"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ProductComment": {
				"properties": {
					"id": {
						"type": "number",
						"format": "double"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					},
					"text": {
						"type": "string"
					},
					"userId": {
						"type": "number",
						"format": "double"
					},
					"productId": {
						"type": "number",
						"format": "double"
					},
					"parentCommentId": {
						"type": "number",
						"format": "double"
					},
					"user": {
						"$ref": "#/components/schemas/User"
					},
					"product": {
						"$ref": "#/components/schemas/Product"
					},
					"parentComment": {
						"$ref": "#/components/schemas/ProductComment"
					},
					"childComments": {
						"items": {
							"$ref": "#/components/schemas/ProductComment"
						},
						"type": "array"
					}
				},
				"required": [
					"id",
					"createdAt",
					"text",
					"userId",
					"productId",
					"user",
					"product",
					"parentCommentId",
					"parentComment",
					"childComments"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Size": {
				"properties": {
					"id": {
						"type": "number",
						"format": "double"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					},
					"name": {
						"type": "string"
					}
				},
				"required": [
					"id",
					"createdAt",
					"name"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Color": {
				"properties": {
					"id": {
						"type": "number",
						"format": "double"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					},
					"code": {
						"type": "string"
					},
					"name": {
						"type": "string"
					}
				},
				"required": [
					"id",
					"createdAt",
					"code",
					"name"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ProductVariant": {
				"properties": {
					"id": {
						"type": "number",
						"format": "double"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					},
					"productId": {
						"type": "number",
						"format": "double"
					},
					"sizeId": {
						"type": "number",
						"format": "double"
					},
					"colorId": {
						"type": "number",
						"format": "double"
					},
					"quantity": {
						"type": "number",
						"format": "double"
					},
					"product": {
						"$ref": "#/components/schemas/Product"
					},
					"size": {
						"$ref": "#/components/schemas/Size"
					},
					"color": {
						"$ref": "#/components/schemas/Color"
					}
				},
				"required": [
					"id",
					"createdAt",
					"productId",
					"sizeId",
					"colorId",
					"quantity",
					"product",
					"size",
					"color"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ProductReview": {
				"properties": {
					"id": {
						"type": "number",
						"format": "double"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					},
					"title": {
						"type": "string"
					},
					"text": {
						"type": "string"
					},
					"productId": {
						"type": "number",
						"format": "double"
					},
					"rating": {
						"type": "number",
						"format": "double"
					},
					"userId": {
						"type": "string"
					},
					"user": {
						"$ref": "#/components/schemas/User"
					},
					"product": {
						"$ref": "#/components/schemas/Product"
					}
				},
				"required": [
					"id",
					"createdAt",
					"productId",
					"rating",
					"userId",
					"title",
					"text",
					"user",
					"product"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Order": {
				"properties": {
					"id": {
						"type": "number",
						"format": "double"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					},
					"userId": {
						"type": "number",
						"format": "double"
					},
					"details": {
						"items": {
							"$ref": "#/components/schemas/IOrderDetail"
						},
						"type": "array"
					},
					"user": {
						"$ref": "#/components/schemas/User"
					},
					"status": {
						"$ref": "#/components/schemas/Status"
					},
					"paymentMethod": {
						"$ref": "#/components/schemas/PaymentMethod"
					},
					"paymentCheck": {
						"type": "boolean"
					},
					"note": {
						"type": "string"
					},
					"address": {
						"type": "string"
					},
					"shipping": {
						"type": "number",
						"format": "double"
					},
					"total": {
						"type": "number",
						"format": "double"
					},
					"orderAt": {
						"type": "string",
						"format": "date-time"
					}
				},
				"required": [
					"id",
					"createdAt",
					"userId",
					"user",
					"status",
					"paymentMethod",
					"paymentCheck",
					"note",
					"address",
					"shipping",
					"total",
					"orderAt",
					"details"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Status": {
				"enum": [
					"ordering",
					"ordered",
					"delivery",
					"canceled",
					"completed"
				],
				"type": "string"
			},
			"PaymentMethod": {
				"enum": [
					"cod",
					"banktransfer",
					"e-wallet",
					"gateway"
				],
				"type": "string"
			},
			"IOrderDetail": {
				"properties": {
					"orderId": {
						"type": "number",
						"format": "double"
					},
					"productVariantId": {
						"type": "number",
						"format": "double"
					},
					"quantity": {
						"type": "number",
						"format": "double"
					},
					"unitPrice": {
						"type": "number",
						"format": "double"
					},
					"id": {
						"type": "number",
						"format": "double"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					}
				},
				"required": [
					"productVariantId",
					"quantity",
					"unitPrice",
					"id",
					"createdAt"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IOrderDetailCreateProps": {
				"properties": {
					"orderId": {
						"type": "number",
						"format": "double"
					},
					"productVariantId": {
						"type": "number",
						"format": "double"
					},
					"quantity": {
						"type": "number",
						"format": "double"
					},
					"unitPrice": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"productVariantId",
					"quantity",
					"unitPrice"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Pick_IUserCreateProps.Exclude_keyofIUserCreateProps.password-or-email__": {
				"properties": {
					"password": {
						"type": "string"
					},
					"email": {
						"type": "string"
					},
					"token": {
						"type": "string"
					},
					"phone": {
						"type": "string"
					},
					"address": {
						"type": "string"
					},
					"orders": {
						"items": {
							"$ref": "#/components/schemas/Order"
						},
						"type": "array"
					},
					"fname": {
						"type": "string"
					},
					"lname": {
						"type": "string"
					},
					"role": {
						"$ref": "#/components/schemas/UserRole"
					},
					"id": {
						"type": "number",
						"format": "double"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					}
				},
				"required": [
					"fname",
					"lname",
					"id",
					"createdAt"
				],
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"IUser": {
				"properties": {
					"password": {
						"type": "string"
					},
					"email": {
						"type": "string"
					},
					"token": {
						"type": "string"
					},
					"phone": {
						"type": "string"
					},
					"address": {
						"type": "string"
					},
					"orders": {
						"items": {
							"$ref": "#/components/schemas/Order"
						},
						"type": "array"
					},
					"fname": {
						"type": "string"
					},
					"lname": {
						"type": "string"
					},
					"role": {
						"$ref": "#/components/schemas/UserRole"
					},
					"id": {
						"type": "number",
						"format": "double"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					}
				},
				"required": [
					"fname",
					"lname",
					"id",
					"createdAt"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IBlogComment": {
				"properties": {
					"text": {
						"type": "string"
					},
					"blogId": {
						"type": "number",
						"format": "double"
					},
					"parentCommentId": {
						"type": "number",
						"format": "double"
					},
					"userId": {
						"type": "number",
						"format": "double"
					},
					"id": {
						"type": "number",
						"format": "double"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					},
					"childComments": {
						"items": {
							"$ref": "#/components/schemas/IBlogCommentCreateProps"
						},
						"type": "array"
					},
					"user": {
						"$ref": "#/components/schemas/IUser"
					}
				},
				"required": [
					"text",
					"blogId",
					"userId",
					"id",
					"createdAt"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IBlogCommentUpdateProps": {
				"properties": {
					"text": {
						"type": "string"
					},
					"blogId": {
						"type": "number",
						"format": "double"
					},
					"userId": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"text",
					"blogId",
					"userId"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IProducts": {
				"properties": {
					"products": {
						"items": {
							"$ref": "#/components/schemas/Product"
						},
						"type": "array"
					},
					"total": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"products",
					"total"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ProductField": {
				"enum": [
					"price",
					"name",
					"overallReview",
					"createdAt"
				],
				"type": "string"
			},
			"IProductCategory": {
				"properties": {
					"name": {
						"type": "string"
					},
					"imgPath": {
						"type": "string"
					},
					"id": {
						"type": "number",
						"format": "double"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					}
				},
				"required": [
					"name",
					"id",
					"createdAt"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IBrand": {
				"properties": {
					"name": {
						"type": "string"
					},
					"imgPath": {
						"type": "string"
					},
					"id": {
						"type": "number",
						"format": "double"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					}
				},
				"required": [
					"name",
					"id",
					"createdAt"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ISize": {
				"properties": {
					"name": {
						"type": "string"
					},
					"id": {
						"type": "number",
						"format": "double"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					}
				},
				"required": [
					"id",
					"createdAt"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IColor": {
				"properties": {
					"code": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"id": {
						"type": "number",
						"format": "double"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					}
				},
				"required": [
					"code",
					"name",
					"id",
					"createdAt"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IProductVariant": {
				"properties": {
					"productId": {
						"type": "number",
						"format": "double"
					},
					"sizeId": {
						"type": "number",
						"format": "double"
					},
					"colorId": {
						"type": "number",
						"format": "double"
					},
					"quantity": {
						"type": "number",
						"format": "double"
					},
					"id": {
						"type": "number",
						"format": "double"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					},
					"size": {
						"$ref": "#/components/schemas/ISize"
					},
					"color": {
						"$ref": "#/components/schemas/IColor"
					}
				},
				"required": [
					"productId",
					"sizeId",
					"colorId",
					"quantity",
					"id",
					"createdAt"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IProduct": {
				"properties": {
					"name": {
						"type": "string"
					},
					"imgPath": {
						"type": "string"
					},
					"id": {
						"type": "number",
						"format": "double"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					},
					"category": {
						"$ref": "#/components/schemas/IProductCategory"
					},
					"brand": {
						"$ref": "#/components/schemas/IBrand"
					},
					"overallReview": {
						"type": "number",
						"format": "double"
					},
					"reviewCount": {
						"type": "number",
						"format": "double"
					},
					"variants": {
						"items": {
							"$ref": "#/components/schemas/IProductVariant"
						},
						"type": "array"
					}
				},
				"required": [
					"name",
					"id",
					"createdAt"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IProductCreateProps": {
				"properties": {
					"sku": {
						"type": "string"
					},
					"categoryId": {
						"type": "number",
						"format": "double"
					},
					"brandId": {
						"type": "number",
						"format": "double"
					},
					"imgPaths": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"name": {
						"type": "string"
					},
					"summary": {
						"type": "string"
					},
					"description": {
						"type": "string"
					},
					"price": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"categoryId",
					"brandId",
					"name",
					"price"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IProductUpdateProps": {
				"properties": {
					"sku": {
						"type": "string"
					},
					"categoryId": {
						"type": "number",
						"format": "double"
					},
					"brandId": {
						"type": "number",
						"format": "double"
					},
					"imgPaths": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"name": {
						"type": "string"
					},
					"summary": {
						"type": "string"
					},
					"description": {
						"type": "string"
					},
					"price": {
						"type": "number",
						"format": "double"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"IProductVariantCreateProps": {
				"properties": {
					"productId": {
						"type": "number",
						"format": "double"
					},
					"sizeId": {
						"type": "number",
						"format": "double"
					},
					"colorId": {
						"type": "number",
						"format": "double"
					},
					"quantity": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"productId",
					"sizeId",
					"colorId",
					"quantity"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IProductVariantUpdateProps": {
				"properties": {
					"colorId": {
						"type": "number",
						"format": "double"
					},
					"sizeId": {
						"type": "number",
						"format": "double"
					},
					"quantity": {
						"type": "number",
						"format": "double"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"IUsers": {
				"properties": {
					"users": {
						"items": {
							"$ref": "#/components/schemas/User"
						},
						"type": "array"
					},
					"total": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"users",
					"total"
				],
				"type": "object",
				"additionalProperties": false
			},
			"UserField": {
				"enum": [
					"fname",
					"sale",
					"createdAt"
				],
				"type": "string"
			},
			"IUserCreateProps": {
				"properties": {
					"fname": {
						"type": "string"
					},
					"lname": {
						"type": "string"
					},
					"email": {
						"type": "string"
					},
					"password": {
						"type": "string"
					},
					"role": {
						"$ref": "#/components/schemas/UserRole"
					},
					"phone": {
						"type": "string"
					},
					"address": {
						"type": "string"
					}
				},
				"required": [
					"fname",
					"lname",
					"email",
					"password"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IUserUpdateProps": {
				"properties": {
					"lname": {
						"type": "string"
					},
					"fname": {
						"type": "string"
					},
					"password": {
						"type": "string"
					},
					"email": {
						"type": "string"
					},
					"phone": {
						"type": "string"
					},
					"address": {
						"type": "string"
					},
					"role": {
						"$ref": "#/components/schemas/UserRole"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"ILogin": {
				"properties": {
					"email": {
						"type": "string"
					},
					"password": {
						"type": "string"
					}
				},
				"required": [
					"email",
					"password"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IRevokeMessage": {
				"properties": {
					"message": {
						"type": "string"
					}
				},
				"required": [
					"message"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IOrders": {
				"properties": {
					"orders": {
						"items": {
							"$ref": "#/components/schemas/Order"
						},
						"type": "array"
					},
					"total": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"orders",
					"total"
				],
				"type": "object",
				"additionalProperties": false
			},
			"OrderField": {
				"enum": [
					"orderAt",
					"total"
				],
				"type": "string"
			},
			"Pick_IOrderCreateProps.Exclude_keyofIOrderCreateProps.details__": {
				"properties": {
					"userId": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"userId"
				],
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"IOrder": {
				"properties": {
					"userId": {
						"type": "number",
						"format": "double"
					},
					"id": {
						"type": "number",
						"format": "double"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					},
					"status": {
						"$ref": "#/components/schemas/Status"
					},
					"total": {
						"type": "number",
						"format": "double"
					},
					"details": {
						"items": {
							"$ref": "#/components/schemas/IOrderDetail"
						},
						"type": "array"
					}
				},
				"required": [
					"userId",
					"id",
					"createdAt"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IOrderCreateProps": {
				"properties": {
					"userId": {
						"type": "number",
						"format": "double"
					},
					"details": {
						"items": {
							"$ref": "#/components/schemas/IOrderDetailCreateProps"
						},
						"type": "array"
					}
				},
				"required": [
					"userId"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IOrderUpdateItems": {
				"properties": {
					"details": {
						"items": {
							"$ref": "#/components/schemas/IOrderDetailCreateProps"
						},
						"type": "array"
					}
				},
				"required": [
					"details"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IOrderUpdateProps": {
				"properties": {
					"status": {
						"$ref": "#/components/schemas/Status"
					},
					"paymentCheck": {
						"type": "boolean"
					},
					"paymentMethod": {
						"$ref": "#/components/schemas/PaymentMethod"
					},
					"address": {
						"type": "string"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"IPlaceOrder": {
				"properties": {
					"address": {
						"type": "string"
					},
					"note": {
						"type": "string"
					},
					"paymentMethod": {
						"$ref": "#/components/schemas/PaymentMethod"
					},
					"shipping": {
						"type": "number",
						"format": "double"
					},
					"total": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"address",
					"paymentMethod"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IOrderDetailQtyUpdate": {
				"properties": {
					"quantity": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"quantity"
				],
				"type": "object",
				"additionalProperties": false
			},
			"PingMessage": {
				"properties": {
					"message": {
						"type": "string"
					}
				},
				"required": [
					"message"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IBlogCategoryCreateProps": {
				"properties": {
					"name": {
						"type": "string"
					}
				},
				"required": [
					"name"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ISizeCreateProps": {
				"properties": {
					"name": {
						"type": "string"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"ISizeUpdateProps": {
				"properties": {
					"name": {
						"type": "string"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"IBrandCreateProps": {
				"properties": {
					"name": {
						"type": "string"
					},
					"imgPath": {
						"type": "string"
					}
				},
				"required": [
					"name"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IBrandUpdateProps": {
				"properties": {
					"name": {
						"type": "string"
					},
					"imgPath": {
						"type": "string"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"IProductCategoryCreateProps": {
				"properties": {
					"name": {
						"type": "string"
					},
					"imgPath": {
						"type": "string"
					}
				},
				"required": [
					"name"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IProductCategoryUpdateProps": {
				"properties": {
					"name": {
						"type": "string"
					},
					"imgPath": {
						"type": "string"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"IColorCreateProps": {
				"properties": {
					"code": {
						"type": "string"
					},
					"name": {
						"type": "string"
					}
				},
				"required": [
					"code",
					"name"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IColorUpdateProps": {
				"properties": {
					"name": {
						"type": "string"
					},
					"code": {
						"type": "string"
					}
				},
				"type": "object",
				"additionalProperties": false
			}
		},
		"securitySchemes": {
			"jwt": {
				"type": "apiKey",
				"in": "cookie",
				"name": "token"
			},
			"tsoa_auth": {
				"type": "oauth2",
				"flows": {
					"implicit": {
						"authorizationUrl": "http://swagger.io/api/oauth/dialog",
						"scopes": {
							"write:pets": "modify things",
							"read:pets": "read things"
						}
					}
				}
			}
		}
	},
	"info": {
		"title": "belle-api",
		"version": "1.0.0",
		"license": {
			"name": "ISC"
		},
		"contact": {
			"name": "LinhTran"
		}
	},
	"openapi": "3.0.0",
	"paths": {
		"/report/overview": {
			"get": {
				"operationId": "GetOverviewReport",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IOverviewReport"
								}
							}
						}
					}
				},
				"description": "Get overview of sales, orders and new register of current month",
				"tags": [
					"Report Controller"
				],
				"security": [
					{
						"jwt": [
							"admin"
						]
					}
				],
				"parameters": []
			}
		},
		"/report/sales": {
			"get": {
				"operationId": "GetSalesReport",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/ISalesReport"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"description": "Get sales and number of order reports for specific time",
				"tags": [
					"Report Controller"
				],
				"security": [
					{
						"jwt": [
							"admin"
						]
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "time",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/report/orders": {
			"get": {
				"operationId": "GetOrderReport",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IOrderReport"
								}
							}
						}
					}
				},
				"description": "Get the number of completed orders and canceled order",
				"tags": [
					"Report Controller"
				],
				"security": [
					{
						"jwt": [
							"admin"
						]
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "time",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/report/products": {
			"get": {
				"operationId": "GetTopProductsReport",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IProductReports"
								}
							}
						}
					}
				},
				"description": "Get list of products in descending  sales",
				"tags": [
					"Report Controller"
				],
				"security": [
					{
						"jwt": [
							"admin"
						]
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "time",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "page",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "limit",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		},
		"/blogs": {
			"get": {
				"operationId": "GetBlogs",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IBlogs"
								}
							}
						}
					}
				},
				"description": "Get all blogs. Search blogs by its category, keyword. Get specific number of blogs by time in descending order",
				"tags": [
					"Blog"
				],
				"security": [],
				"parameters": [
					{
						"in": "query",
						"name": "category",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "limit",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "sort",
						"required": false,
						"schema": {
							"$ref": "#/components/schemas/BlogField"
						}
					},
					{
						"in": "query",
						"name": "page",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "change",
						"required": false,
						"schema": {
							"$ref": "#/components/schemas/Change"
						}
					},
					{
						"in": "query",
						"name": "search",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"post": {
				"operationId": "CreateBlog",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IBlog"
								}
							}
						}
					}
				},
				"description": "Create a new blog",
				"tags": [
					"Blog"
				],
				"security": [
					{
						"jwt": [
							"admin",
							"editor"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/IBlogCreateProps"
							}
						}
					}
				}
			}
		},
		"/blogs/{id}": {
			"get": {
				"operationId": "GetBlogById",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IBlog"
								}
							}
						}
					}
				},
				"description": "Get details for a blog by its id",
				"tags": [
					"Blog"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			},
			"patch": {
				"operationId": "UpdateBlogById",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/components/schemas/IBlog"
										}
									],
									"nullable": true
								}
							}
						}
					}
				},
				"description": "Update a blog partially by its id",
				"tags": [
					"Blog"
				],
				"security": [
					{
						"jwt": [
							"admin",
							"editor"
						]
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/IBlogUpdateProps"
							}
						}
					}
				}
			},
			"delete": {
				"operationId": "DeleteBlogById",
				"responses": {
					"204": {
						"description": "No content"
					}
				},
				"description": "Delete a blog  by its id",
				"tags": [
					"Blog"
				],
				"security": [
					{
						"jwt": [
							"admin",
							"editor"
						]
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		},
		"/blogs/{blogId}/comments": {
			"get": {
				"operationId": "GetCommentsOfBlog",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/IBlogComment"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"description": "Get blog comments by blogId, default number of comments is 2",
				"tags": [
					"Blog"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "blogId",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "date",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "limit",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		},
		"/blogs/comments": {
			"post": {
				"operationId": "CreateComment",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IBlogComment"
								}
							}
						}
					}
				},
				"description": "Create new blog comment",
				"tags": [
					"Blog"
				],
				"security": [
					{
						"jwt": [
							"admin",
							"editor",
							"customer"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/IBlogCommentCreateProps"
							}
						}
					}
				}
			}
		},
		"/blogs/comments/{commentId}": {
			"patch": {
				"operationId": "UpdateCommentById",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IBlogComment"
								}
							}
						}
					}
				},
				"description": "Update a blog comment by its Id,",
				"tags": [
					"Blog"
				],
				"security": [
					{
						"jwt": [
							"admin",
							"editor",
							"customer"
						]
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "commentId",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/IBlogCommentUpdateProps"
							}
						}
					}
				}
			},
			"delete": {
				"operationId": "DeleteCommentById",
				"responses": {
					"204": {
						"description": "No content"
					}
				},
				"description": "Delete a blog comment by its Id,",
				"tags": [
					"Blog"
				],
				"security": [
					{
						"jwt": [
							"admin",
							"editor",
							"customer"
						]
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "commentId",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		},
		"/products": {
			"get": {
				"operationId": "GetProducts",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IProducts"
								}
							}
						}
					}
				},
				"description": "Get all products",
				"tags": [
					"Product"
				],
				"security": [],
				"parameters": [
					{
						"in": "query",
						"name": "category",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "brand",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "limit",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "page",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "sort",
						"required": false,
						"schema": {
							"$ref": "#/components/schemas/ProductField"
						}
					},
					{
						"in": "query",
						"name": "change",
						"required": false,
						"schema": {
							"$ref": "#/components/schemas/Change"
						}
					},
					{
						"in": "query",
						"name": "search",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "min",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "max",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			},
			"post": {
				"operationId": "CreateProduct",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/components/schemas/IProduct"
										}
									],
									"nullable": true
								}
							}
						}
					}
				},
				"description": "Create new product",
				"tags": [
					"Product"
				],
				"security": [
					{
						"jwt": [
							"admin",
							"editor"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/IProductCreateProps"
							}
						}
					}
				}
			}
		},
		"/products/{id}": {
			"get": {
				"operationId": "GetProductById",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/components/schemas/IProduct"
										}
									],
									"nullable": true
								}
							}
						}
					}
				},
				"description": "Get product details by its id",
				"tags": [
					"Product"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			},
			"patch": {
				"operationId": "UpdateProductById",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/components/schemas/IProduct"
										}
									],
									"nullable": true
								}
							}
						}
					}
				},
				"description": "Update product info",
				"tags": [
					"Product"
				],
				"security": [
					{
						"jwt": [
							"admin",
							"editor"
						]
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/IProductUpdateProps"
							}
						}
					}
				}
			},
			"delete": {
				"operationId": "DeleteProductById",
				"responses": {
					"204": {
						"description": "No content"
					}
				},
				"description": "Delete product",
				"tags": [
					"Product"
				],
				"security": [
					{
						"jwt": [
							"admin",
							"editor"
						]
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		},
		"/products/variant": {
			"post": {
				"operationId": "CreateProductVariant",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/components/schemas/IProductVariant"
										}
									],
									"nullable": true
								}
							}
						}
					}
				},
				"description": "Create product variant",
				"tags": [
					"Product"
				],
				"security": [
					{
						"jwt": [
							"admin",
							"editor"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/IProductVariantCreateProps"
							}
						}
					}
				}
			}
		},
		"/products/variant/{variantId}": {
			"patch": {
				"operationId": "UpdateProductVariant",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/components/schemas/IProductVariant"
										}
									],
									"nullable": true
								}
							}
						}
					}
				},
				"description": "Update product variant partially",
				"tags": [
					"Product"
				],
				"security": [
					{
						"jwt": [
							"admin",
							"editor"
						]
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "variantId",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/IProductVariantUpdateProps"
							}
						}
					}
				}
			},
			"delete": {
				"operationId": "DeleteProductVariant",
				"responses": {
					"204": {
						"description": "No content"
					}
				},
				"description": "Delete product variant",
				"tags": [
					"Product"
				],
				"security": [
					{
						"jwt": [
							"admin",
							"editor"
						]
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "variantId",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		},
		"/users": {
			"get": {
				"operationId": "GetUsers",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IUsers"
								}
							}
						}
					}
				},
				"description": "Get all users",
				"tags": [
					"User"
				],
				"security": [
					{
						"jwt": [
							"admin"
						]
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "search",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "role",
						"required": false,
						"schema": {
							"$ref": "#/components/schemas/UserRole"
						}
					},
					{
						"in": "query",
						"name": "limit",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "page",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "sort",
						"required": false,
						"schema": {
							"$ref": "#/components/schemas/UserField"
						}
					},
					{
						"in": "query",
						"name": "change",
						"required": false,
						"schema": {
							"$ref": "#/components/schemas/Change"
						}
					}
				]
			},
			"post": {
				"operationId": "CreateUser",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/components/schemas/IUser"
										}
									],
									"nullable": true
								}
							}
						}
					}
				},
				"description": "Create new user with admin permission",
				"tags": [
					"User"
				],
				"security": [
					{
						"jwt": [
							"admin"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/IUserCreateProps"
							}
						}
					}
				}
			}
		},
		"/users/{id}": {
			"get": {
				"operationId": "GetUserById",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/components/schemas/IUser"
										}
									],
									"nullable": true
								}
							}
						}
					}
				},
				"description": "Get user and user's order list by user id",
				"tags": [
					"User"
				],
				"security": [
					{
						"jwt": [
							"admin",
							"editor",
							"customer"
						]
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			},
			"patch": {
				"operationId": "UpdateUser",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/components/schemas/IUser"
										}
									],
									"nullable": true
								}
							}
						}
					}
				},
				"description": "Update user with admin permission",
				"tags": [
					"User"
				],
				"security": [
					{
						"jwt": [
							"admin",
							"editor",
							"customer"
						]
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/IUserUpdateProps"
							}
						}
					}
				}
			}
		},
		"/auth/register": {
			"post": {
				"operationId": "Register",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IUser"
								}
							}
						}
					}
				},
				"description": "Allow new users create their accounts",
				"tags": [
					"Authorization"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/IUserCreateProps"
							}
						}
					}
				}
			}
		},
		"/auth/login": {
			"post": {
				"operationId": "Login",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IUser"
								}
							}
						}
					}
				},
				"description": "Allow customers login with their email and password",
				"tags": [
					"Authorization"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ILogin"
							}
						}
					}
				}
			}
		},
		"/auth/admin/login": {
			"post": {
				"operationId": "AdminLogin",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IUser"
								}
							}
						}
					}
				},
				"description": "Allow admin and editors login with their email and password",
				"tags": [
					"Authorization"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ILogin"
							}
						}
					}
				}
			}
		},
		"/auth/token": {
			"get": {
				"operationId": "RevokeToken",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IRevokeMessage"
								}
							}
						}
					}
				},
				"description": "Refresh expired access token",
				"tags": [
					"Authorization"
				],
				"security": [],
				"parameters": []
			}
		},
		"/orders": {
			"get": {
				"operationId": "GetOrders",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IOrders"
								}
							}
						}
					}
				},
				"description": "For Admin permission\r\nGet all Orders, be able to sort by price, time, user and to filter by price, time, user...\r\nNot done",
				"tags": [
					"Order"
				],
				"security": [
					{
						"jwt": [
							"admin"
						]
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "search",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "limit",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "page",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "time",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "status",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "paymentCheck",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "sort",
						"required": false,
						"schema": {
							"$ref": "#/components/schemas/OrderField"
						}
					},
					{
						"in": "query",
						"name": "change",
						"required": false,
						"schema": {
							"$ref": "#/components/schemas/Change"
						}
					}
				]
			},
			"post": {
				"operationId": "CreateOrder",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/components/schemas/IOrder"
										}
									],
									"nullable": true
								}
							}
						}
					}
				},
				"description": "Create new order when user add items to order that is not already existed.\r\nDone",
				"tags": [
					"Order"
				],
				"security": [
					{
						"jwt": [
							"admin",
							"customer",
							"editor"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/IOrderCreateProps"
							}
						}
					}
				}
			}
		},
		"/orders/{userId}/all": {
			"get": {
				"operationId": "GetOrdersOfUser",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/IOrder"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"description": "Get all orders of user by userId\r\nDone",
				"tags": [
					"Order"
				],
				"security": [
					{
						"jwt": [
							"admin",
							"customer",
							"editor"
						]
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "userId",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		},
		"/orders/{userId}/current": {
			"get": {
				"operationId": "GetCurrentOrderOfUser",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/components/schemas/IOrder"
										}
									],
									"nullable": true
								}
							}
						}
					}
				},
				"description": "Current order is incomplete order (status: ORDERING)\r\nGet current order of user",
				"tags": [
					"Order"
				],
				"security": [
					{
						"jwt": [
							"admin",
							"customer",
							"editor"
						]
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "userId",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		},
		"/orders/{orderId}": {
			"get": {
				"operationId": "GetOrderById",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/components/schemas/IOrder"
										}
									],
									"nullable": true
								}
							}
						}
					}
				},
				"description": "Get order details",
				"tags": [
					"Order"
				],
				"security": [
					{
						"jwt": [
							"admin",
							"customer",
							"editor"
						]
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "orderId",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			},
			"delete": {
				"operationId": "DeleteOrderById",
				"responses": {
					"204": {
						"description": "No content"
					}
				},
				"description": "Delete order of user",
				"tags": [
					"Order"
				],
				"security": [
					{
						"jwt": [
							"admin",
							"customer",
							"editor"
						]
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "orderId",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		},
		"/orders/{userId}/afterLogin": {
			"patch": {
				"operationId": "UpdateOrderItems",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/components/schemas/IOrder"
										}
									],
									"nullable": true
								}
							}
						}
					}
				},
				"description": "Update order (add items when use login if there are cart items saved in local storage)",
				"tags": [
					"Order"
				],
				"security": [
					{
						"jwt": [
							"admin",
							"customer",
							"editor"
						]
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "userId",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/IOrderUpdateItems"
							}
						}
					}
				}
			}
		},
		"/orders/{orderId}/updateStatus": {
			"patch": {
				"operationId": "UpdateOrderStatus",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IOrder"
								}
							}
						}
					}
				},
				"description": "Update order status",
				"tags": [
					"Order"
				],
				"security": [
					{
						"jwt": [
							"admin",
							"customer",
							"editor"
						]
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "orderId",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/IOrderUpdateProps"
							}
						}
					}
				}
			}
		},
		"/orders/{orderId}/place": {
			"patch": {
				"operationId": "PlaceOrder",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IOrder"
								}
							}
						}
					}
				},
				"description": "Submit current order",
				"tags": [
					"Order"
				],
				"security": [
					{
						"jwt": [
							"admin",
							"customer",
							"editor"
						]
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "orderId",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/IPlaceOrder"
							}
						}
					}
				}
			}
		},
		"/orders/{orderId}/items": {
			"post": {
				"operationId": "AddItemToOrder",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/components/schemas/IOrder"
										}
									],
									"nullable": true
								}
							}
						}
					}
				},
				"description": "Add (create) item to order",
				"tags": [
					"Order"
				],
				"security": [
					{
						"jwt": [
							"admin",
							"customer",
							"editor"
						]
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "orderId",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/IOrderDetailCreateProps"
							}
						}
					}
				}
			}
		},
		"/orders/items/{itemId}": {
			"patch": {
				"operationId": "UpdateItemQuantity",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IOrderDetail"
								}
							}
						}
					}
				},
				"description": "Update order item (quantity)",
				"tags": [
					"Order"
				],
				"security": [
					{
						"jwt": [
							"admin",
							"customer",
							"editor"
						]
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "itemId",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/IOrderDetailQtyUpdate"
							}
						}
					}
				}
			},
			"delete": {
				"operationId": "DeleteItem",
				"responses": {
					"204": {
						"description": "No content"
					}
				},
				"description": "Delete order items",
				"tags": [
					"Order"
				],
				"security": [
					{
						"jwt": [
							"admin",
							"customer",
							"editor"
						]
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "itemId",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		},
		"/ping": {
			"get": {
				"operationId": "GetMessage",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/PingMessage"
								}
							}
						}
					}
				},
				"tags": [
					"Ping Controller"
				],
				"security": [],
				"parameters": []
			}
		},
		"/blog-categories": {
			"get": {
				"operationId": "GetBlogCategory",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/IBlogCategory"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"description": "Get all blog categories",
				"tags": [
					"Blog Category"
				],
				"security": [],
				"parameters": []
			},
			"post": {
				"operationId": "CreateBlogCategory",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IBlogCategory"
								}
							}
						}
					}
				},
				"description": "Create new blog category",
				"tags": [
					"Blog Category"
				],
				"security": [
					{
						"jwt": [
							"admin",
							"editor"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/IBlogCategoryCreateProps"
							}
						}
					}
				}
			}
		},
		"/blog-categories/{id}": {
			"patch": {
				"operationId": "UpdateBlogCategoryById",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IBlogCategory"
								}
							}
						}
					}
				},
				"description": "Update a blog category partially by its id",
				"tags": [
					"Blog Category"
				],
				"security": [
					{
						"jwt": [
							"admin",
							"editor"
						]
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/IBlogCategoryCreateProps"
							}
						}
					}
				}
			},
			"delete": {
				"operationId": "DeleteBlogCategoryById",
				"responses": {
					"204": {
						"description": "No content"
					}
				},
				"description": "Delete a blog category by its id",
				"tags": [
					"Blog Category"
				],
				"security": [
					{
						"jwt": [
							"admin",
							"editor"
						]
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		},
		"/sizes": {
			"get": {
				"operationId": "GetSizes",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/ISize"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"description": "Get all Sizes",
				"tags": [
					"Product Size"
				],
				"security": [],
				"parameters": []
			},
			"post": {
				"operationId": "CreateSize",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ISize"
								}
							}
						}
					}
				},
				"description": "Create new Size",
				"tags": [
					"Product Size"
				],
				"security": [
					{
						"jwt": [
							"admin",
							"editor"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ISizeCreateProps"
							}
						}
					}
				}
			}
		},
		"/sizes/{id}": {
			"patch": {
				"operationId": "UpdateSizeById",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ISize"
								}
							}
						}
					}
				},
				"description": "Update Size info",
				"tags": [
					"Product Size"
				],
				"security": [
					{
						"jwt": [
							"admin",
							"editor"
						]
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ISizeUpdateProps"
							}
						}
					}
				}
			},
			"delete": {
				"operationId": "DeleteSizeById",
				"responses": {
					"204": {
						"description": "No content"
					}
				},
				"description": "Delete Size",
				"tags": [
					"Product Size"
				],
				"security": [
					{
						"jwt": [
							"admin",
							"editor"
						]
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		},
		"/brands": {
			"get": {
				"operationId": "GetBrands",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/IBrand"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"description": "Get all brands",
				"tags": [
					"Product Brand"
				],
				"security": [],
				"parameters": []
			},
			"post": {
				"operationId": "CreateBrand",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IBrand"
								}
							}
						}
					}
				},
				"description": "Create new brand",
				"tags": [
					"Product Brand"
				],
				"security": [
					{
						"jwt": [
							"admin",
							"editor"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/IBrandCreateProps"
							}
						}
					}
				}
			}
		},
		"/brands/{id}": {
			"patch": {
				"operationId": "UpdateBrandById",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IBrand"
								}
							}
						}
					}
				},
				"description": "Update brand info",
				"tags": [
					"Product Brand"
				],
				"security": [
					{
						"jwt": [
							"admin",
							"editor"
						]
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/IBrandUpdateProps"
							}
						}
					}
				}
			},
			"delete": {
				"operationId": "DeleteBrandById",
				"responses": {
					"204": {
						"description": "No content"
					}
				},
				"description": "Delete brand",
				"tags": [
					"Product Brand"
				],
				"security": [
					{
						"jwt": [
							"admin",
							"editor"
						]
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		},
		"/product-categories": {
			"get": {
				"operationId": "GetProductCategorys",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/IProductCategory"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"description": "Get all product categories",
				"tags": [
					"Product Category"
				],
				"security": [],
				"parameters": []
			},
			"post": {
				"operationId": "CreateProductCategory",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IProductCategory"
								}
							}
						}
					}
				},
				"description": "Create new product Category",
				"tags": [
					"Product Category"
				],
				"security": [
					{
						"jwt": [
							"admin",
							"editor"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/IProductCategoryCreateProps"
							}
						}
					}
				}
			}
		},
		"/product-categories/{id}": {
			"patch": {
				"operationId": "UpdateProductCategoryById",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IProductCategory"
								}
							}
						}
					}
				},
				"description": "Update product category info",
				"tags": [
					"Product Category"
				],
				"security": [
					{
						"jwt": [
							"admin",
							"editor"
						]
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/IProductCategoryUpdateProps"
							}
						}
					}
				}
			},
			"delete": {
				"operationId": "DeleteProductCategoryById",
				"responses": {
					"204": {
						"description": "No content"
					}
				},
				"description": "Delete croduct category",
				"tags": [
					"Product Category"
				],
				"security": [
					{
						"jwt": [
							"admin",
							"editor"
						]
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		},
		"/colors": {
			"get": {
				"operationId": "GetColors",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/IColor"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"description": "Get all colors",
				"tags": [
					"Product Color"
				],
				"security": [],
				"parameters": []
			},
			"post": {
				"operationId": "CreateColor",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IColor"
								}
							}
						}
					}
				},
				"description": "Create new color",
				"tags": [
					"Product Color"
				],
				"security": [
					{
						"jwt": [
							"admin",
							"editor"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/IColorCreateProps"
							}
						}
					}
				}
			}
		},
		"/colors/{id}": {
			"patch": {
				"operationId": "UpdateColorById",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IColor"
								}
							}
						}
					}
				},
				"description": "Update color info",
				"tags": [
					"Product Color"
				],
				"security": [
					{
						"jwt": [
							"admin",
							"editor"
						]
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/IColorUpdateProps"
							}
						}
					}
				}
			},
			"delete": {
				"operationId": "DeleteColorById",
				"responses": {
					"204": {
						"description": "No content"
					}
				},
				"description": "Delete color",
				"tags": [
					"Product Color"
				],
				"security": [
					{
						"jwt": [
							"admin",
							"editor"
						]
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		}
	},
	"servers": [
		{
			"url": "/"
		}
	]
}